{"ast":null,"code":"var _jsxFileName = \"/home/basti/Desktop/CodeIngenieriaSoftware/code2/INFO248-Incrementos/app/src/components/Metricas.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TablaMetrica from './metricas/TablaMetrica';\nimport AddMetrica from './metricas/AddMetrica';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Metricas() {\n  _s();\n\n  const [indicadores, setIndicadores] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = await axios.get('http://localhost:4000/indicadores/lista');\n      setIndicadores(res.data);\n    };\n\n    fetchPosts();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-large\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A\\xF1adir Metrica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddMetrica, {\n          indicadores: indicadores\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-large\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ver Metrica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablaMetrica, {\n          indicadores: indicadores\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Metricas, \"MVZzDQhXDvfi86c56Qr2mZdP0lc=\");\n\n_c = Metricas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Metricas\");","map":{"version":3,"sources":["/home/basti/Desktop/CodeIngenieriaSoftware/code2/INFO248-Incrementos/app/src/components/Metricas.jsx"],"names":["React","TablaMetrica","AddMetrica","useEffect","useState","axios","Metricas","indicadores","setIndicadores","fetchPosts","res","get","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,yCAAV,CAAlB;AACAH,MAAAA,cAAc,CAACE,GAAG,CAACE,IAAL,CAAd;AACD,KAHD;;AAIAH,IAAAA,UAAU;AACX,GANQ,CAAT;AAQF,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,WAAW,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,YAAD;AAAc,UAAA,WAAW,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA5BuBD,Q;;KAAAA,Q","sourcesContent":["import React from 'react'\nimport TablaMetrica from './metricas/TablaMetrica';\nimport AddMetrica from './metricas/AddMetrica';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function Metricas() {\n\n    const [indicadores, setIndicadores] = useState([]);\n\n\n    useEffect(() => {\n      const fetchPosts = async () => {\n        const res = await axios.get('http://localhost:4000/indicadores/lista');\n        setIndicadores(res.data);\n      };\n      fetchPosts();\n    }, );\n\n  return (\n    <div className=\"container\">\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          <h2>AÃ±adir Metrica</h2>\n          <AddMetrica indicadores={indicadores}/>\n        </div>\n        <div className=\"flex-large\">\n          <h2>Ver Metrica</h2>\n\n          <TablaMetrica indicadores={indicadores}/>\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}